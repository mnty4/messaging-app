{"version":3,"sources":["components/Join/Join.module.css","components/Chat/Chat.module.css","components/Message/Message.module.css","components/Rooms/Rooms.module.css","components/Room/Room.module.css","components/Message/Message.js","components/Chat/Chat.js","components/Join/Join.js","components/Room/Room.js","components/Rooms/Rooms.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Message","userData","isSelf","Card","className","style","alignSelf","width","Text","styles","MessageMeta","textAlign","username","time","Title","message","defaultProps","Chat","socket","room","useState","setMessage","messageList","setMessageList","submitHandler","e","a","preventDefault","length","messageData","id","hours","Date","getHours","minutes","getMinutes","emit","messages","useEffect","on","Container","InputGroup","Form","Control","type","placeholder","onChange","target","value","onKeyPress","key","Button","variant","onClick","map","i","Join","joinHandler","setRoom","setUsername","onSubmit","title","Row","Col","md","Group","Label","Room","count","ListGroupItem","Rooms","rooms","refreshHandler","ListGroup","console","log","process","io","connect","App","joinedRoom","setJoinedRoom","setRooms","roomArr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67e972ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Join\":\"Join_Join__2Xn5i\",\"title\":\"Join_title__1eIj3\",\"username\":\"Join_username__1Xxc6\",\"usernameField\":\"Join_usernameField__3qymT\",\"room\":\"Join_room__2torG\",\"roomField\":\"Join_roomField__3bJHZ\",\"submit\":\"Join_submit__uBR74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chat\":\"Chat_Chat__I9Ga3\",\"chatHeader\":\"Chat_chatHeader__112ge\",\"chatBody\":\"Chat_chatBody__DSsGW\",\"scrollToBottom\":\"Chat_scrollToBottom__Vcp_k\",\"messages\":\"Chat_messages__3ZZzs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__196Xl\",\"MessageText\":\"Message_MessageText__2w-pN\",\"MessageMeta\":\"Message_MessageMeta__1M-2f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Rooms\":\"Rooms_Rooms__1EAV3\",\"title\":\"Rooms_title__Zl-ex\",\"roomList\":\"Rooms_roomList__2hDFt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Room\":\"Room_Room__2NfDH\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Message.module.css\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst Message = ({ userData, isSelf }) => {\r\n  return (\r\n    <Card\r\n      className=\"mt-2 px-2\"\r\n      style={\r\n        isSelf\r\n          ? { alignSelf: \"flex-end\", width: \"60%\" }\r\n          : { alignSelf: \"flex-start\", width: \"60%\" }\r\n      }\r\n    >\r\n      <Card.Text\r\n        className={styles.MessageMeta}\r\n        // style={{ alignItems: \"flex-end\" }}\r\n        style={{ textAlign: \"end\" }}\r\n      >\r\n        {isSelf ? \"me\" : userData.username} - {userData.time}\r\n      </Card.Text>\r\n\r\n      <Card.Title style={{ textAlign: \"start\" }}>{userData.message}</Card.Title>\r\n    </Card>\r\n  );\r\n};\r\n\r\nMessage.propTypes = {};\r\n\r\nMessage.defaultProps = {};\r\n\r\nexport default Message;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Chat.module.css\";\r\nimport Message from \"../Message/Message\";\r\nimport { Container, Form, InputGroup, Button } from \"react-bootstrap\";\r\n\r\nconst Chat = ({ socket, username, room }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageList, setMessageList] = useState([]);\r\n\r\n  const submitHandler = async (e) => {\r\n    e && e.preventDefault();\r\n    if (message.length < 1) return;\r\n\r\n    const messageData = {\r\n      id: socket.id,\r\n      username,\r\n      room,\r\n      message,\r\n      time: (() => {\r\n        const hours = new Date().getHours();\r\n        let minutes = new Date().getMinutes();\r\n        if (minutes < 10) minutes = \"0\" + minutes;\r\n        if (hours === 0) return `12:${minutes}am`;\r\n        return hours > 12\r\n          ? `${hours - 12}:${minutes}pm`\r\n          : `${hours}:${minutes}am`;\r\n      })(),\r\n    };\r\n    await socket.emit(\"send_message\", messageData);\r\n\r\n    setMessageList((messages) => [...messages, messageData]);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"receive_message\", (messageData) => {\r\n      setMessageList((messages) => [...messages, messageData]);\r\n    });\r\n  }, [socket]);\r\n\r\n  return (\r\n    <Container className={styles.Chat}>\r\n      <h2>{room} - Live Chat</h2>\r\n      <InputGroup>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Ur mum...\"\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          value={message}\r\n          onKeyPress={(e) => e.key === \"Enter\" && submitHandler()}\r\n        ></Form.Control>\r\n        <Button variant=\"primary\" onClick={submitHandler}>\r\n          Send\r\n        </Button>\r\n      </InputGroup>\r\n      <div className={styles.messages}>\r\n        {messageList.map((userData, i) => {\r\n          return (\r\n            <Message\r\n              key={i}\r\n              userData={userData}\r\n              isSelf={socket.id === userData.id}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </Container>\r\n\r\n    // <div className={styles.Chat}>\r\n    //   <div>\r\n    //     <h2 className={styles.chatHeader}>{room} - Live Chat</h2>\r\n    //   </div>\r\n\r\n    //   <div className=\"chat-footer\">\r\n    //     <input\r\n    //       type=\"text\"\r\n    //       placeholder=\"Hey...\"\r\n    // onChange={(e) => setMessage(e.target.value)}\r\n    // value={message}\r\n    // onKeyPress={(e) => e.key === \"Enter\" && submitHandler()}\r\n    //     />\r\n    // <button onClick={submitHandler}>Send</button>\r\n    //   </div>\r\n    //   <div className={styles.chatBody}>\r\n    // {messageList.map((userData, i) => {\r\n    //   return (\r\n    //     <Message\r\n    //       key={i}\r\n    //       userData={userData}\r\n    //       isSelf={socket.id === userData.id}\r\n    //         />\r\n    //       );\r\n    //     })}\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nChat.propTypes = {};\r\n\r\nChat.defaultProps = {};\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Join.module.css\";\r\nimport { Form, Button, Col, Row, Container } from \"react-bootstrap\";\r\nconst Join = ({ joinHandler, setRoom, setUsername, room, username }) => {\r\n  return (\r\n    <Container className={styles.Join}>\r\n      <Form onSubmit={joinHandler} className={styles.Join}>\r\n        <h2 className={styles.title}>Join a chat</h2>\r\n        <Row>\r\n          <Col md>\r\n            <Form.Group>\r\n              <Form.Label>Username</Form.Label>\r\n\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                value={username}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md>\r\n            <Form.Group>\r\n              <Form.Label>Room</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => setRoom(e.target.value)}\r\n                value={room}\r\n                onKeyPress={(e) => e.key === \"Enter\" && joinHandler()}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Form.Text className=\"text-muted\">You are retarded</Form.Text>\r\n        </Row>\r\n\r\n        <Button type=\"submit\">Join</Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nJoin.propTypes = {};\r\n\r\nJoin.defaultProps = {};\r\n\r\nexport default Join;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Room.module.css\";\nimport { ListGroupItem } from \"react-bootstrap\";\nconst Room = ({ room, count }) => (\n  <ListGroupItem className=\"pb-3 pt-3\">\n    <div className={styles.Room}>\n      <b>{room}</b>\n      <div>{count}/300</div>\n    </div>\n  </ListGroupItem>\n);\n\nRoom.propTypes = {};\n\nRoom.defaultProps = {};\n\nexport default Room;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Rooms.module.css\";\nimport Room from \"../Room/Room\";\nimport { Button, Container, ListGroup } from \"react-bootstrap\";\n\nconst Rooms = ({ rooms, refreshHandler }) => {\n  return (\n    <Container className={styles.Rooms}>\n      <h2>Chat Rooms</h2>\n      <Button variant=\"outline-secondary\">Temp Refresh</Button>\n      <ListGroup className=\"mt-3\">\n        {rooms.map(([room, count], i) => (\n          <Room room={room} count={count} key={i} />\n        ))}\n      </ListGroup>\n    </Container>\n  );\n};\n\nRooms.propTypes = {};\n\nRooms.defaultProps = {};\n\nexport default Rooms;\n","import \"./App.css\";\r\nimport io from \"socket.io-client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Chat from \"./components/Chat/Chat\";\r\nimport Join from \"./components/Join/Join\";\r\nimport Rooms from \"./components/Rooms/Rooms\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconsole.log(process.env.REACT_APP_API_ENDPOINT);\r\nconst socket = io.connect(process.env.REACT_APP_API_ENDPOINT);\r\nfunction App() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [joinedRoom, setJoinedRoom] = useState(\"\");\r\n  const [rooms, setRooms] = useState([]);\r\n  const validate = () => {\r\n    return room.length > 0 && username.length > 0;\r\n  };\r\n\r\n  const joinHandler = async (e) => {\r\n    e && e.preventDefault();\r\n    if (!validate()) return console.log(\":(\");\r\n    console.log(\"joined room: \", room);\r\n    await socket.emit(\"leave_room\", joinedRoom);\r\n    await socket.emit(\"join_room\", room);\r\n    setJoinedRoom(room);\r\n    setRoom(\"\");\r\n    refreshHandler();\r\n  };\r\n\r\n  const refreshHandler = async () => {\r\n    await socket.emit(\"refresh_rooms\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"receive_refreshed_rooms\", (roomArr) => {\r\n      setRooms(roomArr);\r\n      console.log(rooms);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Join\r\n        joinHandler={joinHandler}\r\n        setRoom={setRoom}\r\n        setUsername={setUsername}\r\n        username={username}\r\n        room={room}\r\n      />\r\n      <Rooms refreshHandler={refreshHandler} rooms={rooms} />\r\n      {joinedRoom !== \"\" && (\r\n        <Chat socket={socket} username={username} room={joinedRoom} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}