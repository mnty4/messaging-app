{"version":3,"sources":["components/Chat/Chat.module.css","components/Message/Message.module.css","components/Join/Join.module.css","components/Message/Message.js","components/Chat/Chat.js","components/Join/Join.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Message","userData","isSelf","className","styles","style","alignSelf","MessageMeta","username","time","MessageText","message","defaultProps","Chat","socket","room","useState","setMessage","messageList","setMessageList","submitHandler","e","a","preventDefault","length","messageData","hours","Date","getHours","minutes","getMinutes","emit","console","log","messages","useEffect","on","chatHeader","type","placeholder","onChange","target","value","onKeyPress","key","onClick","chatBody","map","i","Join","joinHandler","setRoom","setUsername","onSubmit","form","htmlFor","id","process","io","connect","App","joinedRoom","setJoinedRoom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.589c60bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chat\":\"Chat_Chat__3RhN7\",\"chatHeader\":\"Chat_chatHeader__1JyAv\",\"chatBody\":\"Chat_chatBody__1z5RR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__2s4Xw\",\"MessageText\":\"Message_MessageText__-Gd0S\",\"MessageMeta\":\"Message_MessageMeta__3qtqN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Join\":\"Join_Join__3colv\",\"form\":\"Join_form__3E2rb\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Message.module.css\";\r\n\r\nconst Message = ({ userData, isSelf }) => {\r\n  return (\r\n    <div\r\n      className={styles.Message}\r\n      style={isSelf ? { alignSelf: \"flex-start\" } : { alignSelf: \"flex-end\" }}\r\n    >\r\n      <p className={styles.MessageMeta}>\r\n        {isSelf ? \"me\" : userData.username} - {userData.time}\r\n      </p>\r\n      <p className={styles.MessageText}>{userData.message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nMessage.propTypes = {};\r\n\r\nMessage.defaultProps = {};\r\n\r\nexport default Message;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Chat.module.css\";\r\nimport Message from \"../Message/Message\";\r\n\r\nconst Chat = ({ socket, username, room }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageList, setMessageList] = useState([]);\r\n\r\n  const submitHandler = async (e) => {\r\n    e && e.preventDefault();\r\n    if (message.length < 1) return;\r\n\r\n    const messageData = {\r\n      username,\r\n      room,\r\n      message,\r\n      time: (() => {\r\n        const hours = new Date().getHours();\r\n        let minutes = new Date().getMinutes();\r\n        if (minutes < 10) minutes = \"0\" + minutes;\r\n        if (hours === 0) return `12:${minutes}am`;\r\n        return hours > 12\r\n          ? `${hours - 12}:${minutes}pm`\r\n          : `${hours}:${minutes}am`;\r\n      })(),\r\n    };\r\n    await socket.emit(\"send_message\", messageData);\r\n\r\n    console.log(messageList);\r\n    setMessageList((messages) => [...messages, messageData]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"receive_message\", (messageData) => {\r\n      console.log(messageList);\r\n      setMessageList((messages) => [...messages, messageData]);\r\n    });\r\n  }, [socket]);\r\n\r\n  return (\r\n    <div className={styles.Chat}>\r\n      <div>\r\n        <h2 className={styles.chatHeader}>{room} - Live Chat</h2>\r\n      </div>\r\n\r\n      <div className=\"chat-footer\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Hey...\"\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          onKeyPress={(e) => e.key === \"Enter\" && submitHandler()}\r\n        />\r\n        <button onClick={submitHandler}>Send</button>\r\n      </div>\r\n      <div className={styles.chatBody}>\r\n        {messageList.map((userData, i) => {\r\n          return (\r\n            // <div\r\n            //   style={\r\n            //     i % 2\r\n            //       ? {\r\n            //           alignSelf: \"flex-end\",\r\n            //           width: \"80%\",\r\n            //           backgroundColor: \"blue\",\r\n            //         }\r\n            //       : {\r\n            //           alignSelf: \"flex-start\",\r\n            //           width: \"80%\",\r\n            //           backgroundColor: \"red\",\r\n            //         }\r\n            //   }\r\n            // >\r\n            <Message\r\n              key={i}\r\n              userData={userData}\r\n              isSelf={username === userData.username}\r\n            />\r\n            // </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nChat.propTypes = {};\r\n\r\nChat.defaultProps = {};\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Join.module.css\";\r\n\r\nconst Join = ({ joinHandler, setRoom, setUsername }) => {\r\n  return (\r\n    <div className={styles.Join}>\r\n      <form onSubmit={joinHandler} className={styles.form}>\r\n        <h1 className=\"title\">Join a chat</h1>\r\n        <label className=\"name\" htmlFor=\"name\">\r\n          Name\r\n        </label>\r\n        <input\r\n          id=\"name\"\r\n          type=\"text\"\r\n          className=\"name-input\"\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <label className=\"room\" htmlFor=\"room\">\r\n          Room\r\n        </label>\r\n        <input\r\n          id=\"room\"\r\n          type=\"text\"\r\n          className=\"room-input\"\r\n          onChange={(e) => setRoom(e.target.value)}\r\n          onKeyPress={(e) => e.key === \"Enter\" && joinHandler()}\r\n        />\r\n        <button className=\"join\">Join</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nJoin.propTypes = {};\r\n\r\nJoin.defaultProps = {};\r\n\r\nexport default Join;\r\n","import \"./App.css\";\r\nimport io from \"socket.io-client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Chat from \"./components/Chat/Chat\";\r\nimport Join from \"./components/Join/Join\";\r\nconsole.log(process.env.REACT_APP_API_ENDPOINT);\r\nconst socket = io.connect(process.env.REACT_APP_API_ENDPOINT);\r\n// TODO: add scroll wheel for message display\r\nfunction App() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [joinedRoom, setJoinedRoom] = useState(\"\");\r\n\r\n  const validate = () => {\r\n    return room.length > 0 && username.length > 0;\r\n  };\r\n\r\n  const joinHandler = (e) => {\r\n    e && e.preventDefault();\r\n    if (!validate()) return console.log(\":(\");\r\n    console.log(\"joined room: \", room);\r\n    socket.emit(\"leave_room\", joinedRoom);\r\n    setJoinedRoom(room);\r\n    socket.emit(\"join_room\", room);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Join\r\n        joinHandler={joinHandler}\r\n        setRoom={setRoom}\r\n        setUsername={setUsername}\r\n      />\r\n      {joinedRoom !== \"\" && (\r\n        <Chat socket={socket} username={username} room={joinedRoom} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}