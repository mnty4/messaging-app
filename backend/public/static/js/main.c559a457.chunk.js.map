{"version":3,"sources":["components/Join/Join.module.css","components/Chat/Chat.module.css","components/Message/Message.module.css","components/Rooms/Rooms.module.css","components/Room/Room.module.css","components/UsersTyping/UsersTyping.module.css","components/Message/Message.js","components/UsersTyping/UsersTyping.js","components/Chat/Chat.js","components/Join/Join.js","components/Room/Room.js","components/Rooms/Rooms.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Message","userData","isSelf","Card","className","style","alignSelf","width","color","Text","styles","MessageMeta","textAlign","username","time","Title","message","defaultProps","UsersTyping","usersTyping","display","alignItems","gap","fontWeight","length","Chat","socket","room","useState","messageList","setMessageList","setMessage","setUsersTyping","isTyping","setIsTyping","submitHandler","e","a","preventDefault","messageData","id","hours","Date","getHours","minutes","getMinutes","emit","messages","useEffect","on","users","filter","user","console","log","Container","height","InputGroup","Form","Control","type","placeholder","onChange","target","value","onKeyPress","key","Button","variant","onClick","map","i","Join","joinHandler","setRoom","setUsername","onSubmit","title","Row","Col","lg","Group","Label","required","Room","count","join","joinedRoom","disabled","setDisabled","ListGroupItem","Rooms","rooms","refreshHandler","onlineTotal","wheelIsGrey","justifyContent","backgroundColor","borderRadius","size","cursor","ListGroup","process","io","connect","App","setJoinedRoom","setRooms","setOnlineTotal","setWheelIsGrey","validateUsername","newRoom","total","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c559a457.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Join\":\"Join_Join__2YY5U\",\"title\":\"Join_title__sRMLJ\",\"username\":\"Join_username__3oTcL\",\"usernameField\":\"Join_usernameField__2fSyd\",\"room\":\"Join_room__HrtYD\",\"roomField\":\"Join_roomField__dFK2b\",\"submit\":\"Join_submit__306WB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chat\":\"Chat_Chat__25VjN\",\"chatHeader\":\"Chat_chatHeader__2Uefm\",\"chatBody\":\"Chat_chatBody__3eqgc\",\"scrollToBottom\":\"Chat_scrollToBottom__1MSlx\",\"messages\":\"Chat_messages__1JjJI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__yPjlz\",\"MessageText\":\"Message_MessageText__3hpHD\",\"MessageMeta\":\"Message_MessageMeta__2I-pf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Rooms\":\"Rooms_Rooms__JGy-c\",\"title\":\"Rooms_title__1aCCn\",\"roomList\":\"Rooms_roomList__3fEKp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Room\":\"Room_Room__bR0Lk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UsersTyping\":\"UsersTyping_UsersTyping__1_tSN\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Message.module.css\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst Message = ({ userData, isSelf }) => {\r\n  return (\r\n    <Card\r\n      className={\"mb-2 px-2 \" + (isSelf && \"bg-primary\")}\r\n      style={\r\n        isSelf\r\n          ? { alignSelf: \"flex-end\", width: \"60%\", color: \"#FFF\" }\r\n          : { alignSelf: \"flex-start\", width: \"60%\" }\r\n      }\r\n    >\r\n      <Card.Text className={styles.MessageMeta} style={{ textAlign: \"end\" }}>\r\n        {isSelf ? \"me\" : userData.username} - {userData.time}\r\n      </Card.Text>\r\n      <Card.Title style={{ textAlign: \"start\" }}>{userData.message}</Card.Title>\r\n    </Card>\r\n  );\r\n};\r\n\r\nMessage.propTypes = {};\r\n\r\nMessage.defaultProps = {};\r\n\r\nexport default Message;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './UsersTyping.module.css';\nimport './3dots.css';\n\nconst UsersTyping = ({usersTyping}) => {\n  \n\nreturn (\n    <div style={{display: 'flex', alignItems: 'center', gap: '20px', fontWeight: 600}} className='mx-1'>\n      <div style={{color: '#9880ff'}}>{(() => {\n        if (usersTyping.length === 1)\n          return usersTyping[0].username + ' is typing'\n        if (usersTyping.length === 2)\n          return `${usersTyping[0].username} and ${usersTyping[1].username} are typing`\n        if (usersTyping.length > 2)\n          return `${usersTyping[0].username} and ${usersTyping.length - 1} others are typing`\n      })()}</div>\n      <div className='dot-elastic'></div>\n      </div>\n)}\n\nUsersTyping.propTypes = {};\n\nUsersTyping.defaultProps = {};\n\nexport default UsersTyping;\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Chat.module.css\";\r\nimport Message from \"../Message/Message\";\r\nimport { Container, Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport UsersTyping from \"../UsersTyping/UsersTyping\";\r\n\r\nconst Chat = ({ socket, username, room }) => {\r\n  const [messageList, setMessageList] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [usersTyping, setUsersTyping] = useState([]);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n\r\n  const submitHandler = async (e) => {\r\n    e && e.preventDefault();\r\n    if (message.length < 1) return;\r\n\r\n    const messageData = {\r\n      id: socket.id,\r\n      username,\r\n      room,\r\n      message,\r\n      time: (() => {\r\n        const hours = new Date().getHours();\r\n        let minutes = new Date().getMinutes();\r\n        if (minutes < 10) minutes = \"0\" + minutes;\r\n        if (hours === 0) return `12:${minutes}am`;\r\n        return hours > 12\r\n          ? `${hours - 12}:${minutes}pm`\r\n          : `${hours}:${minutes}am`;\r\n      })(),\r\n    };\r\n    await socket.emit(\"send_message\", messageData);\r\n\r\n    setMessageList((messages) => [...messages, messageData]);\r\n    setMessage(\"\");\r\n  };\r\n  const typingHandler = (e) => {\r\n    setMessage(e.target.value);\r\n\r\n    if(!isTyping) {\r\n      socket.emit('typing', {\r\n        id: socket.id,\r\n        username,\r\n        room\r\n      });\r\n      setIsTyping(true);\r\n      console.log('isstyping');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    socket.on(\"receive_message\", (messageData) => {\r\n      setMessageList((messages) => [...messages, messageData]);\r\n    });\r\n    socket.on(\"receive_typing\", (userData) => {\r\n      setUsersTyping((users) => [...users, userData]);\r\n    });\r\n    socket.on(\"receive_cancel_typing\", (userData) => {\r\n      setUsersTyping((users) => users.filter((user) => user.id !== userData.id));\r\n    });\r\n  }, [socket]);\r\n  useEffect(() => {\r\n      if(message.length === 0) {\r\n        console.log('not typing');\r\n        socket.emit('cancel_typing', {\r\n          id: socket.id,\r\n          username,\r\n          room\r\n        });\r\n        setIsTyping(false);\r\n      }\r\n  }, [message])\r\n\r\n  return (\r\n    <Container className={styles.Chat}>\r\n      <h2>{room} - Live Chat</h2>\r\n      <div style={{height: '24px'}}>\r\n      {usersTyping.length > 0 && <UsersTyping usersTyping={usersTyping} /> }\r\n      </div>\r\n      \r\n      <InputGroup>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Ur mum...\"\r\n          onChange={typingHandler}\r\n          value={message}\r\n          onKeyPress={(e) => e.key === \"Enter\" && submitHandler()}\r\n        ></Form.Control>\r\n        <Button variant=\"primary\" onClick={submitHandler}>\r\n          Send\r\n        </Button>\r\n      </InputGroup>\r\n      \r\n      \r\n      <div className={styles.messages + \" mt-2\"}>\r\n        {messageList.map((userData, i) => {\r\n          return (\r\n            <Message\r\n              key={i}\r\n              userData={userData}\r\n              isSelf={socket.id === userData.id}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nChat.propTypes = {};\r\n\r\nChat.defaultProps = {};\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Join.module.css\";\r\nimport { Form, Button, Col, Row, Container } from \"react-bootstrap\";\r\nconst Join = ({ joinHandler, setRoom, setUsername, room, username }) => {\r\n  return (\r\n    <Container className={styles.Join + \" mb-4\"}>\r\n      <Form onSubmit={joinHandler} className={styles.Join}>\r\n        <h2 className={styles.title}>Join a Chat</h2>\r\n        <Row>\r\n          <Col lg>\r\n            <Form.Group>\r\n              <Form.Label>Username</Form.Label>\r\n\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                value={username}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col lg>\r\n            <Form.Group>\r\n              <Form.Label>Room</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => setRoom(e.target.value)}\r\n                value={room}\r\n                onKeyPress={(e) => e.key === \"Enter\" && joinHandler()}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Form.Text className=\"text-muted\">\r\n            Enter a username and the room you wish to join or join a room\r\n            directly below!\r\n          </Form.Text>\r\n        </Row>\r\n\r\n        <Button type=\"submit\">Join</Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nJoin.propTypes = {};\r\n\r\nJoin.defaultProps = {};\r\n\r\nexport default Join;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Room.module.css\";\r\nimport { ListGroupItem, Button } from \"react-bootstrap\";\r\nconst Room = ({ room, count, join, joinedRoom }) => {\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setDisabled(joinedRoom === room);\r\n  }, [joinedRoom, room]);\r\n\r\n  return (\r\n    <ListGroupItem className=\"pb-3 pt-3\">\r\n      <div className={styles.Room}>\r\n        <b>{room}</b>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", gap: \"1em\" }}>\r\n          <div>{count}/300</div>\r\n          <Button\r\n            disabled={disabled}\r\n            onClick={() => {\r\n              join(room);\r\n            }}\r\n          >\r\n            Join\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </ListGroupItem>\r\n  );\r\n};\r\n\r\nRoom.propTypes = {};\r\n\r\nRoom.defaultProps = {};\r\n\r\nexport default Room;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Rooms.module.css\";\r\nimport Room from \"../Room/Room\";\r\nimport { ArrowClockwise } from 'react-bootstrap-icons';\r\nimport { Container, ListGroup } from \"react-bootstrap\";\r\n\r\nconst Rooms = ({ rooms, refreshHandler, join, joinedRoom, onlineTotal, wheelIsGrey }) => {\r\n  return (\r\n    <Container className={styles.Rooms}>\r\n      \r\n      <h2>Chat Rooms</h2>\r\n      <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', gap: '1em'}}>\r\n        <div style={{backgroundColor: 'green', width: '10px', height: '10px', borderRadius: '50%'}}></div>\r\n        <div style={{color: 'green'}}>{`${onlineTotal} User${onlineTotal !== 1 ? \"'s\" : ''} Online`}</div>\r\n        \r\n      <ArrowClockwise size={32} onClick={refreshHandler} style={wheelIsGrey ? {color: 'grey'} : {cursor: 'pointer'}} className='mt-1'/>\r\n      </div>\r\n      <ListGroup className=\"mt-3\">\r\n        {rooms.map(([room, count], i) => (\r\n          <Room\r\n            room={room}\r\n            count={count}\r\n            key={i}\r\n            join={join}\r\n            joinedRoom={joinedRoom}\r\n          />\r\n        ))}\r\n      </ListGroup>\r\n    </Container>\r\n  );\r\n};\r\n\r\nRooms.propTypes = {};\r\n\r\nRooms.defaultProps = {};\r\n\r\nexport default Rooms;\r\n","import \"./App.css\";\r\nimport io from \"socket.io-client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Chat from \"./components/Chat/Chat\";\r\nimport Join from \"./components/Join/Join\";\r\nimport Rooms from \"./components/Rooms/Rooms\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n// username is typing...\r\n// username and username2 is typing...\r\n// username and 2 others is typing...\r\n\r\n// avatars, choose or random options\r\n\r\n// scroll wheel\r\n\r\n// organise my commits\r\n\r\n// database\r\n\r\nconsole.log(process.env.REACT_APP_API_ENDPOINT);\r\nconst socket = io.connect(process.env.REACT_APP_API_ENDPOINT);\r\nfunction App() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [joinedRoom, setJoinedRoom] = useState(\"\");\r\n  const [rooms, setRooms] = useState([]);\r\n  const [onlineTotal, setOnlineTotal] = useState(0);\r\n  const [wheelIsGrey, setWheelIsGrey] = useState(false);\r\n\r\n  const validateUsername = () => {\r\n    return username.length > 0;\r\n  };\r\n  const validateRoom = () => {\r\n    return room.length > 0;\r\n  };\r\n\r\n  const joinHandler = async (e) => {\r\n    e && e.preventDefault();\r\n    if (!validateUsername() || !validateRoom()) return console.log(\":(\");\r\n    await join(room);\r\n  };\r\n\r\n  const join = async (newRoom) => {\r\n    if (!validateUsername()) return console.log(\":(\");\r\n    console.log(\"joined room: \", newRoom);\r\n    await socket.emit(\"leave_room\", joinedRoom);\r\n    await socket.emit(\"join_room\", newRoom);\r\n    setJoinedRoom(newRoom);\r\n    setRoom(\"\");\r\n    refreshHandler();\r\n  };\r\n\r\n  const refreshHandler = async () => {\r\n    setWheelIsGrey(true);\r\n    await socket.emit(\"refresh_room_info\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"receive_refreshed_room_info\", ({rooms, total}) => {\r\n      setRooms(rooms);\r\n      setOnlineTotal(total);\r\n      setWheelIsGrey(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <img\r\n        src=\"/images/ball-talk-logo-v1_edited.jpg\"\r\n        className=\"logo mb-3\"\r\n        alt=\"logo\"\r\n      />\r\n      <Join\r\n        joinHandler={joinHandler}\r\n        setRoom={setRoom}\r\n        setUsername={setUsername}\r\n        username={username}\r\n        room={room}\r\n      />\r\n      <Rooms\r\n        refreshHandler={refreshHandler}\r\n        wheelIsGrey={wheelIsGrey}\r\n        rooms={rooms}\r\n        join={join}\r\n        joinedRoom={joinedRoom}\r\n        onlineTotal={onlineTotal}\r\n      />\r\n      {joinedRoom !== \"\" && (\r\n        <Chat socket={socket} username={username} room={joinedRoom} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}